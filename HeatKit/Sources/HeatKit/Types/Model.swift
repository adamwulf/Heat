import Foundation

public struct Model: Codable, Identifiable, Hashable {
    public var id: String { name }
    
    public var name: String
    public var size: Int64
    public var digest: String
    
    public var license: String?
    public var modelfile: String?
    public var parameters: String?
    public var template: String?
    public var system: String?
    
    init(name: String, size: Int64, digest: String,
         license: String? = nil, modelfile: String? = nil, parameters: String? = nil, template: String? = nil, system: String? = nil) {
        self.name = name
        self.size = size
        self.digest = digest
        
        self.license = license
        self.modelfile = modelfile
        self.parameters = parameters
        self.template = template
        self.system = system
    }
}

extension Model {
    
    public static var preview: Self {
        .init(
            name: "mistral:instruct",
            size: 0,
            digest: "",
            license: "",
            modelfile:
                """
                # Modelfile generated by "ollama show"
                # To build a new Modelfile based on this one, replace the FROM line with:
                # FROM mistral:instruct
                
                FROM /Users/nathan/.ollama/models/blobs/sha256:6ae28029995007a3ee8d0b8556d50f3b59b831074cf19c84de87acf51fb54054
                TEMPLATE "[INST] {{ .System }} {{ .Prompt }} [/INST]
                \"
                PARAMETER stop "[INST]"
                PARAMETER stop "[/INST]"
                PARAMETER stop "<<SYS>>"
                PARAMETER stop "<</SYS>>"
                """,
            parameters:
                """
                stop                           [INST]
                stop                           [/INST]
                stop                           <<SYS>>
                stop                           <</SYS>>
                """,
            template: "[INST] {{ .System }} {{ .Prompt }} [/INST]\n",
            system: ""
        )
    }
}
